****************************************
*              WARSHIPS                *
*         A game for Roona             *
****************************************
	ORG $2000

INIT	EQU $FB2F   AKA TEXT
HOME	EQU $FC58
PRBYTE	EQU $FDDA
COUT	EQU $FDED
CROUT	EQU $FD8E
RDKEY2	EQU $FD0C
VTAB	EQU $FC22

CH	EQU $24
CV	EQU $25

LINE1	EQU $400    TOP LEFT
PTR	EQU $06

SHIPSCNT	EQU 5
SHIPSIZE	EQU 37

****************************************

Entry	JSR INIT
	JSR HOME
	JSR PrCols
	LDX #0
	LDY #0
	JSR MvCursor
GameLoop	JSR DrwShps
	JSR Input
	JMP GameLoop

* PrCols prints the column names.
PrCols	LDX #0
PrCols1	LDA PrColsD,X
	BEQ PrCols2
	STA LINE1,X
	INX
	JMP PrCols1
PrColsD	ASC " 12345678910"
	HEX 00
PrCols2	NOP

* PrRows prints the row names.
PrRows	LDX #0
PrRows1	LDA PrRowsD,X
	BEQ PrRows2,X
	JSR COUT
	JSR CROUT
	INX
	JMP PrRows1
PrRowsD	ASC " ABCDEFGHIJ"
	HEX 00
PrRows2	RTS

Quit	JSR HOME
	JSR Print
	ASC "Thank you for playing!"
	HEX 8D00
	JMP $3D0       RE-ENTER DOS

* MvCursor moves the cursor to (X,Y)
MvCursor	STX CH
	STY CV
	INC CH
	INC CV
	JSR VTAB
	RTS

Input	JSR RDKEY2
	CMP #$9B
	BEQ Quit    ESC QUITS
	CMP #$88    LEFT ARROW
	BEQ Left
	CMP #$95    RIGHT ARROW
	BEQ Right
	CMP #$8A    DOWN ARROW
	BEQ Down
	CMP #$8B    UP ARROW
	BEQ Up
	CMP #$B0
	BCC Input1
	CMP #$BA
	BCS Input1  "1"-"9"
	CLC
	SBC #$AF    A-"0" + 1
	STA CH
	BNE Input2
	LDA #10
	STA CH
	JMP Input2
Input1	CMP #$C1
	BCC Input2  A < "A"
	CMP #$CB
	BCS Input2  A >= "K"
	CLC
	SBC #$BF    A-"A" - 2?
	STA CV
	JSR VTAB
Input2	RTS

Left	DEC CH
	LDA CH
	BNE Left1
	INC CH      HIT LEFT EDGE
Left1	RTS

Right	INC CH
	LDA CH
	CMP #11
	BNE Right1
	DEC CH      HIT RIGHT EDGE
Right1	RTS

Up	DEC CV
	LDA CV
	BEQ Up1
	JSR VTAB
	RTS
Up1	INC CV
	RTS

Down	INC CV
	LDA CV
	CMP #11
	BEQ Down1
	JSR VTAB
	RTS
Down1	DEC CV
	RTS

* Prints an ASCII string.
* From Wagner's "Assembly Lines" pg 125
Print	PLA
	STA PTR
	PLA
	STA PTR+1
	LDY #$01
Print1	LDA (PTR),Y
	BEQ Print2
	JSR COUT
	INY
	BNE Print1
Print2	CLC
	TYA
	ADC PTR
	STA PTR
	LDA PTR+1
	ADC #$00
	PHA
	LDA PTR
	PHA
	RTS

DrwShps	LDA CH
	PHA
	LDA CV
	PHA

	LDX #0
	STX ShipPtr

DrwShpsL	LDA Ships+2,X   HORIZ?
	STA ShipDir
	LDA Ships+3,X   LENGTH
	STA ShipLen
	LDY Ships+1,X   Y-COORD
	LDA Ships+0,X   X-COORD
	TAX
	JSR MvCursor

	LDA ShipPtr
	ADC #4
	STA ShipPtr
DrwShps1	LDX ShipPtr
	LDA Ships,X
	JSR COUT
	INC ShipPtr
	DEC ShipLen
	BEQ DrwShps2
	DEC CH
	INC CV
	JSR VTAB
	JMP DrwShps1

DrwShps2	LDX ShipPtr
	CPX #SHIPSIZE
	BEQ DrwShps3
	JMP DrwShpsL

DrwShps3	PLA
	STA CV
	PLA
	STA CH
	JSR VTAB
	RTS

ShipPtr	HEX 00
ShipLen	HEX 00
ShipDir	HEX 00   0=HORIZ 1=VERT

* Ship {0:X 1:Y 2:HORIZ? 3:LEN 4+:HITS}
Ships	DFB 0,0,0,5,$B5,$B5,$B5,$B5,$B5
	DFB 1,0,0,4,$B4,$B4,$B4,$B4
	DFB 2,0,0,3,$B3,$B3,$B3
	DFB 3,0,0,3,$C4,$C4,$C4
	DFB 4,0,1,2,$B2,$B2
* SHIPSIZE = sizeof(Ships) == 37

* vim: set noexpandtab tabstop=9 sts=9 sw=9 invlist textwidth=40 colorcolumn=40 filetype=asmMerlin65816:
